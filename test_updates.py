#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
"""

import subprocess
import sys
from pathlib import Path

def test_update_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
    try:
        result = subprocess.run([
            sys.executable, "-m", "semantic_release", "version", "--print"
        ], capture_output=True, text=True, cwd=Path(__file__).parent)
        
        if result.returncode == 0:
            next_version = result.stdout.strip()
            print(f"üì¶ –°–ª–µ–¥—É—é—â–∞—è –≤–µ—Ä—Å–∏—è: {next_version}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏: {result.stderr}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç–∞—Ç—É—Å git
    try:
        result = subprocess.run([
            "git", "status", "--porcelain"
        ], capture_output=True, text=True, cwd=Path(__file__).parent)
        
        if result.stdout.strip():
            print("‚ö†Ô∏è  –ï—Å—Ç—å –Ω–µ–∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:")
            print(result.stdout)
        else:
            print("‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —á–∏—Å—Ç—ã–π")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ git: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config_file = Path(__file__).parent / "pyproject.toml"
    if config_file.exists():
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è pyproject.toml –Ω–∞–π–¥–µ–Ω–∞")
    else:
        print("‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è pyproject.toml –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

if __name__ == "__main__":
    test_update_system()
